package nl.hr.project3_4.straalbetaal.server.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;

import org.apache.log4j.Logger;

public class DataAccessObject extends DbTemplate {

	private Connection con;
	private PreparedStatement stmt;
	private ResultSet rs;


	public DataAccessObject() {}


	public String getUserID(String iban, long pincode) throws Exception {
		String userID = null;
		String getUserSQL = "SELECT cards.userID FROM cards WHERE cards.IBAN = ? AND cards.pincode = ?";

		con = getConnection();
		stmt = con.prepareStatement(getUserSQL);
		stmt.setString(1, iban);
		stmt.setLong(2, pincode);
		rs = stmt.executeQuery();
		if(rs.next())
			userID = rs.getString(1);
		if(rs.next())
			throw new Exception("Multiple userID's for one user!");

		closeResources(con, stmt, rs);

		return userID;
	}

	public Long getUserBalance(String iban) throws Exception {
		long balance;
		String getBalanceSQL = "SELECT saldo.cardSaldo FROM saldo WHERE saldo.IBAN = ?";

		con = getConnection();
		stmt = con.prepareStatement(getBalanceSQL);
		stmt.setString(1, iban);
		rs = stmt.executeQuery();
		if(rs.next())
			balance = rs.getLong(1);
		else
			throw new Exception("Saldo with given IBAN does not exist!");

		closeResources(con, stmt, rs);

		return balance;
	}

	public boolean withdraw(String iban, long amount, long currentSaldo) throws Exception {
		boolean successfulWithdraw = false;
		String getMoneySQL = "UPDATE saldo SET saldo.cardSaldo = ? WHERE cardID = ?";
		String betaalGeschiedenisSQL = "INSERT INTO betaalgeschiedenis (iban, af_bij_geschreven, datum) VALUE( ?, ?, ?)";

		con = getConnection();
		stmt = con.prepareStatement(getMoneySQL);
		stmt.setLong(1, currentSaldo);
		stmt.setString(2, iban);
		if(stmt.executeUpdate() == 1) {
			stmt = con.prepareStatement(betaalGeschiedenisSQL);
			stmt.setString(1, iban);
			stmt.setLong(2, amount);
			stmt.setDate(3, (java.sql.Date) new Date());
			if(stmt.executeUpdate() == 1)
				successfulWithdraw = true;
		}

		closeResources(con, stmt, rs);

		return successfulWithdraw;
	}

}
